THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & WellDefinedness_EngageWarpDrive.1,(_f(33) & _f(78) & _f(76) & _f(74) & _f(72) & _f(104) => _f(105));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & WellDefinedness_MoveBackward.1,(_f(33) & _f(31) & _f(64) & _f(62) & _f(104) => _f(105));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & WellDefinedness_MoveForward.1,(_f(33) & _f(31) & _f(55) & _f(53) & _f(104) => _f(105));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & WellDefinedness_MoveDown.1,(_f(33) & _f(31) & _f(46) & _f(44) & _f(104) => _f(105));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & WellDefinedness_MoveUp.1,(_f(33) & _f(31) & _f(29) & _f(27) & _f(104) => _f(105));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.6,(_f(33) & _f(78) & _f(76) & _f(74) & _f(73) & _f(4) & _f(17) => _f(43));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.5,(_f(33) & _f(78) & _f(76) & _f(74) & _f(73) & _f(4) & _f(15) => _f(42));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.4,(_f(33) & _f(78) & _f(76) & _f(74) & _f(72) & _f(4) & _f(21) => _f(83));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.3,(_f(33) & _f(78) & _f(76) & _f(74) & _f(72) & _f(4) & _f(19) => _f(82));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.2,(_f(33) & _f(78) & _f(76) & _f(74) & _f(72) & _f(4) & _f(15) => _f(81));
_f(1) & _f(2) & _f(3) & _f(23) & _f(71) & EngageWarpDrive.1,(_f(33) & _f(78) & _f(76) & _f(74) & _f(72) & _f(4) & _f(13) => _f(80));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.8,(_f(33) & _f(31) & _f(64) & _f(63) & _f(4) & _f(17) => _f(43));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.7,(_f(33) & _f(31) & _f(64) & _f(63) & _f(4) & _f(15) => _f(42));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.6,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(21) => _f(70));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.5,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(19) => _f(69));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.4,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(15) => _f(39));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.3,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(13) => _f(68));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.2,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(7) => _f(67));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveBackward.1,(_f(33) & _f(31) & _f(64) & _f(62) & _f(4) & _f(5) => _f(66));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.8,(_f(33) & _f(31) & _f(55) & _f(54) & _f(4) & _f(17) => _f(43));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.7,(_f(33) & _f(31) & _f(55) & _f(54) & _f(4) & _f(15) => _f(42));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.6,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(21) => _f(61));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.5,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(19) => _f(60));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.4,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(15) => _f(39));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.3,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(13) => _f(59));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.2,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(7) => _f(58));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveForward.1,(_f(33) & _f(31) & _f(55) & _f(53) & _f(4) & _f(5) => _f(57));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.8,(_f(33) & _f(31) & _f(46) & _f(45) & _f(4) & _f(17) => _f(43));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.7,(_f(33) & _f(31) & _f(46) & _f(45) & _f(4) & _f(15) => _f(42));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.6,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(21) => _f(52));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.5,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(19) => _f(51));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.4,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(15) => _f(39));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.3,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(13) => _f(50));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.2,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(9) => _f(49));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveDown.1,(_f(33) & _f(31) & _f(46) & _f(44) & _f(4) & _f(35) => _f(48));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.8,(_f(33) & _f(31) & _f(29) & _f(28) & _f(4) & _f(17) => _f(43));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.7,(_f(33) & _f(31) & _f(29) & _f(28) & _f(4) & _f(15) => _f(42));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.6,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(21) => _f(41));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.5,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(19) => _f(40));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.4,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(15) => _f(39));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.3,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(13) => _f(38));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.2,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(9) => _f(37));
_f(1) & _f(2) & _f(3) & _f(23) & _f(26) & MoveUp.1,(_f(33) & _f(31) & _f(29) & _f(27) & _f(4) & _f(35) => _f(36));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.9,(_f(4) & _f(21) => _f(22));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.8,(_f(4) & _f(19) => _f(20));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.7,(_f(4) & _f(17) => _f(18));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.6,(_f(4) & _f(15) => _f(25));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.5,(_f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.4,(_f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.3,(_f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & _f(3) & _f(23) & _f(24) & NewGame.1,(_f(4) & _f(5) => _f(6));
_f(1) & _f(2) & _f(3) & Initialisation.9,(_f(4) & _f(21) => _f(22));
_f(1) & _f(2) & _f(3) & Initialisation.8,(_f(4) & _f(19) => _f(20));
_f(1) & _f(2) & _f(3) & Initialisation.7,(_f(4) & _f(17) => _f(18));
_f(1) & _f(2) & _f(3) & Initialisation.6,(_f(4) & _f(15) => _f(16));
_f(1) & _f(2) & _f(3) & Initialisation.5,(_f(4) & _f(13) => _f(14));
_f(1) & _f(2) & _f(3) & Initialisation.4,(_f(4) & _f(11) => _f(12));
_f(1) & _f(2) & _f(3) & Initialisation.3,(_f(4) & _f(9) => _f(10));
_f(1) & _f(2) & _f(3) & Initialisation.2,(_f(4) & _f(7) => _f(8));
_f(1) & _f(2) & _f(3) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
spaceXAxis : POW( (NAT-{0})) & ((spaceXAxis) = (((1) .. (12)))) & spaceYAxis : POW( (NAT-{0})) & ((spaceYAxis) = (((1) .. (7)))) & ((space) = ((spaceXAxis * spaceYAxis))) & asteroids : POW( space) & ((asteroids) = (({((7) |-> (7))}\/{((8) |-> (3))}\/{((10) |-> (6))}\/{((11) |-> (2))}\/{((12) |-> (5))}\/{((3) |-> (2))}\/{((3) |-> (5))}\/{((5) |-> (4))}\/{((6) |-> (7))}\/{((7) |-> (1))}\/{((7) |-> (5))}))) & emptyRegion : POW( space) & ((((emptyRegion) /\ (asteroids))) = ({})) & ((((emptyRegion) \/ (asteroids))) = (space)) & ((homebase) : (space)) & ((homebase) : (emptyRegion)) & ((homebase) = (((1) |-> (1)))) & ((starbase) : (space)) & ((starbase) : (emptyRegion)) & ((starbase) = (((6) |-> (4))));
((1..5)*{MOVEMENT}): FIN(NATURAL*{MOVEMENT}) & not(((1..5)*{MOVEMENT}) = {}) & ((1..10)*{MOVEMENT_REPORT}): FIN(NATURAL*{MOVEMENT_REPORT}) & not(((1..10)*{MOVEMENT_REPORT}) = {}) & ((1..2)*{DOCKED_STATUS}): FIN(NATURAL*{DOCKED_STATUS}) & not(((1..2)*{DOCKED_STATUS}) = {}) & ((1..3)*{GAME_STATUS}): FIN(NATURAL*{GAME_STATUS}) & not(((1..3)*{GAME_STATUS}) = {}) & ((normalMovementPower) = (5)) & ((warpDriveMovementPower) = (20)) & ((asteroidCollisionPower) = (10));
"Invariant is preserved";
"Check invariant ((xAxis) : ((NAT-{0})))";
((1) : ((NAT-{0})));
"Check invariant ((xAxis) : (spaceXAxis))";
((1) : (spaceXAxis));
"Check invariant ((yAxis) : (spaceYAxis))";
((1) : (spaceYAxis));
"Check invariant ((((xAxis) |-> (yAxis))) : (space))";
((((1) |-> (1))) : (space));
"Check invariant ((((xAxis) |-> (yAxis))) : (emptyRegion))";
((((1) |-> (1))) : (emptyRegion));
"Check invariant ((currentPower) : (INTEGER))";
((100) : (INTEGER));
"Check invariant ((noOfAsteroidCollisions) : (NAT))";
((0) : (NAT));
"Check invariant ((regionsVisited) : (seq(space)))";
(([((1) |-> (1))]) : (seq(space)));
"Check invariant ((regionsVisited) : (seq(emptyRegion)))";
(([((1) |-> (1))]) : (seq(emptyRegion)));
((xAxis) : ((NAT-{0}))) & ((xAxis) : (spaceXAxis)) & ((yAxis) : ((NAT-{0}))) & ((yAxis) : (spaceYAxis)) & ((((xAxis) |-> (yAxis))) : (space)) & ((((xAxis) |-> (yAxis))) : (emptyRegion)) & ((currentPower) : (INTEGER)) & ((noOfAsteroidCollisions) : (NAT)) & regionsVisited : NATURAL-{0} +-> space & ((regionsVisited) : (seq(space))) & regionsVisited : NATURAL-{0} +-> emptyRegion & ((regionsVisited) : (seq(emptyRegion)));
((power) : (NAT));
((power) : (INTEGER));
((report) : (((1..10)*{MOVEMENT_REPORT})));
not(((((xAxis) |-> (succ(yAxis)))) : (asteroids)));
not(not(((((xAxis) |-> (succ(yAxis)))) : (asteroids))));
((((xAxis) |-> (succ(yAxis)))) : (space));
not(((((xAxis) |-> (succ(yAxis)))) : (space)));
(normalMovementPower <= currentPower);
not((normalMovementPower <= currentPower));
not(((((((xAxis) |-> (yAxis))) = (starbase))) or ((currentPower +1 <= normalMovementPower))));
not(not(((((((xAxis) |-> (yAxis))) = (starbase))) or ((currentPower +1 <= normalMovementPower)))));
"Check invariant ((yAxis) : ((NAT-{0})))";
((succ(yAxis)) : ((NAT-{0})));
((succ(yAxis)) : (spaceYAxis));
((((xAxis) |-> (succ(yAxis)))) : (emptyRegion));
(((currentPower - normalMovementPower)) : (INTEGER));
((((regionsVisited) <- (((xAxis) |-> (succ(yAxis)))))) : (seq(space)));
((((regionsVisited) <- (((xAxis) |-> (succ(yAxis)))))) : (seq(emptyRegion)));
(((currentPower - asteroidCollisionPower)) : (INTEGER));
(((noOfAsteroidCollisions + 1)) : (NAT));
not(((((xAxis) |-> (pred(yAxis)))) : (asteroids)));
not(not(((((xAxis) |-> (pred(yAxis)))) : (asteroids))));
((((xAxis) |-> (pred(yAxis)))) : (space));
not(((((xAxis) |-> (pred(yAxis)))) : (space)));
((pred(yAxis)) : ((NAT-{0})));
((pred(yAxis)) : (spaceYAxis));
((((xAxis) |-> (pred(yAxis)))) : (emptyRegion));
((((regionsVisited) <- (((xAxis) |-> (pred(yAxis)))))) : (seq(space)));
((((regionsVisited) <- (((xAxis) |-> (pred(yAxis)))))) : (seq(emptyRegion)));
not(((((succ(xAxis)) |-> (yAxis))) : (asteroids)));
not(not(((((succ(xAxis)) |-> (yAxis))) : (asteroids))));
((((succ(xAxis)) |-> (yAxis))) : (space));
not(((((succ(xAxis)) |-> (yAxis))) : (space)));
((succ(xAxis)) : ((NAT-{0})));
((succ(xAxis)) : (spaceXAxis));
((((succ(xAxis)) |-> (yAxis))) : (emptyRegion));
((((regionsVisited) <- (((succ(xAxis)) |-> (yAxis))))) : (seq(space)));
((((regionsVisited) <- (((succ(xAxis)) |-> (yAxis))))) : (seq(emptyRegion)));
not(((((pred(xAxis)) |-> (yAxis))) : (asteroids)));
not(not(((((pred(xAxis)) |-> (yAxis))) : (asteroids))));
((((pred(xAxis)) |-> (yAxis))) : (space));
not(((((pred(xAxis)) |-> (yAxis))) : (space)));
((pred(xAxis)) : ((NAT-{0})));
((pred(xAxis)) : (spaceXAxis));
((((pred(xAxis)) |-> (yAxis))) : (emptyRegion));
((((regionsVisited) <- (((pred(xAxis)) |-> (yAxis))))) : (seq(space)));
((((regionsVisited) <- (((pred(xAxis)) |-> (yAxis))))) : (seq(emptyRegion)));
((report) : (((1..10)*{MOVEMENT_REPORT}))) & ((newXAxis) : ((NAT-{0}))) & ((newXAxis) : (spaceXAxis)) & ((newYAxis) : ((NAT-{0}))) & ((newYAxis) : (spaceYAxis));
not(((((newXAxis) |-> (newYAxis))) : (asteroids)));
not(not(((((newXAxis) |-> (newYAxis))) : (asteroids))));
not(((newXAxis) = (xAxis)) & ((newYAxis) = (yAxis)));
not(not(((newXAxis) = (xAxis)) & ((newYAxis) = (yAxis))));
((((newXAxis) |-> (newYAxis))) : (space));
not(((((newXAxis) |-> (newYAxis))) : (space)));
(warpDriveMovementPower <= currentPower);
not((warpDriveMovementPower <= currentPower));
((((newXAxis) |-> (newYAxis))) : (emptyRegion));
(((currentPower - warpDriveMovementPower)) : (INTEGER));
((((regionsVisited) <- (((newXAxis) |-> (newYAxis))))) : (seq(space)));
((((regionsVisited) <- (((newXAxis) |-> (newYAxis))))) : (seq(emptyRegion)));
btrue;
((dockedStatus) : (((1..2)*{DOCKED_STATUS})));
((((xAxis) |-> (yAxis))) = (starbase));
not(((((xAxis) |-> (yAxis))) = (starbase)));
((gameStatus) : (((1..3)*{GAME_STATUS})));
(currentPower +1 <= normalMovementPower);
not((currentPower +1 <= normalMovementPower));
((1..5)*{MOVEMENT}): FIN(NATURAL*{MOVEMENT}) & not(((1..5)*{MOVEMENT}) = {});
((warpDriveMovementPower) = (20));
((normalMovementPower) = (5));
regionsVisited : NATURAL-{0} +-> space;
((regionsVisited) : (seq(space)));
((noOfAsteroidCollisions) : (NAT));
((currentPower) : (INTEGER));
((((xAxis) |-> (yAxis))) : (emptyRegion));
((((xAxis) |-> (yAxis))) : (space));
((yAxis) : (spaceYAxis));
((yAxis) : ((NAT-{0})));
((xAxis) : (spaceXAxis));
((xAxis) : ((NAT-{0})));
"Well definedness";
((regionsVisited) : (seq(ran(regionsVisited))));
((newYAxis) : ((NAT-{0})));
((newXAxis) : (spaceXAxis));
((newXAxis) : ((NAT-{0})));
((newXAxis) = (xAxis))
END
&
THEORY EnumerateX IS
DOCKED_STATUS == {SpaceshipDockedAtStarbase,SpaceshipNotDockedAtStarbase};
GAME_STATUS == {GameWon,GameLost,GameNotOver};
MOVEMENT == {Up,Down,Forward,Reverse,Warp};
MOVEMENT_REPORT == {MovementSuccessful,MovementError_OutOfBounds,MovementError_OccupiedByAsteriod,MovementError_InsufficientPower,WarpSuccessful,WarpError_OutOfBounds,WarpError_OccupiedByAsteroid,WarpError_InsufficientPower,WarpError_UnableToWarpToTheSameRegion,GameOverRestartTheGame}
END
